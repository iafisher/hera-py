DLABEL(string0) TIGER_STRING("colorless green ideas sleep furiously")
DLABEL(string1) TIGER_STRING("    acdeeeeeefgiillllnoooprrrsssssuuy")
DLABEL(string2) TIGER_STRING("got ")
DLABEL(string3) TIGER_STRING(", expected ")

#include <Tiger-stdlib-stack-data.hera>

CBON()
    INC(SP, 4)
    SET(R1, string0)
    STORE(R1, 2, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 2, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, ssort0)
    LOAD(R1, 3, R12)
    DEC(SP, 4)
    STORE(R1, 0, FP)
    SET(R1, string1)
    STORE(R1, 1, FP)
    LOAD(R1, 0, FP)
    STORE(R1, 2, FP)
    LOAD(R1, 1, FP)
    STORE(R1, 3, FP)
    MOVE(R12, SP)
    INC(SP, 5)
    LOAD(R1, 2, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 3, FP)
    STORE(R1, 4, R12)
    STORE(FP, 2, R12)
    CALL(R12, tstrcmp)
    LOAD(R2, 3, R12)
    DEC(SP, 5)
    SET(R1, 0)
    CMP(R2, R1)
    BZ(if_true0)
    SET(R2, 0)
    BR(end_if1)
  LABEL(if_true0)
    SET(R2, 1)
  LABEL(end_if1)
    CMP(R2, R0)
    BZ(if_false0)
    SET(R1, 42)
    STORE(R1, 2, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 2, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, printint)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    BR(end_if0)
  LABEL(if_false0)
    SET(R1, string2)
    STORE(R1, 2, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 2, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, print)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    LOAD(R1, 0, FP)
    STORE(R1, 2, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 2, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, print)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    SET(R1, string3)
    STORE(R1, 2, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 2, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, print)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    LOAD(R1, 1, FP)
    STORE(R1, 2, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 2, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, println)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
  LABEL(end_if0)
HALT()

#include <Tiger-stdlib-stack.hera>
LABEL(array_out_of_bounds0)
    print("attempted illegal array access... halting")
    HALT()
LABEL(nil_record0)
    print("attempted use of a nil record... halting")
    HALT()

LABEL(first_letter0)
    INC(SP, 9)
    STORE(R13, 0, FP)
    STORE(R12, 1, FP)
    STORE(R1, 4, FP)
    STORE(R2, 5, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 8, FP)
    SET(R1, 0)
    STORE(R1, 9, FP)
    SET(R1, 1)
    STORE(R1, 10, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R1, 8, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 9, FP)
    STORE(R1, 4, R12)
    LOAD(R1, 10, FP)
    STORE(R1, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R1, 3, R12)
    DEC(SP, 6)
    STORE(R1, 6, FP)
    SET(R1, 0)
    STORE(R1, 7, FP)
    SET(R1, 1)
    STORE(R1, 8, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 10, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 10, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, size)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    SET(R1, 1)
    SUB(R2, R2, R1)
    STORE(R2, 9, FP)
  LABEL(for_start0)
    LOAD(R1, 8, FP)
    LOAD(R2, 9, FP)
    CMP(R1, R2)
    BG(for_end0)
    LOAD(R1, 6, FP)
    STORE(R1, 10, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 12, FP)
    LOAD(R1, 8, FP)
    STORE(R1, 13, FP)
    SET(R1, 1)
    STORE(R1, 14, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R1, 12, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 13, FP)
    STORE(R1, 4, R12)
    LOAD(R1, 14, FP)
    STORE(R1, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R1, 3, R12)
    DEC(SP, 6)
    STORE(R1, 11, FP)
    MOVE(R12, SP)
    INC(SP, 5)
    LOAD(R1, 10, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 11, FP)
    STORE(R1, 4, R12)
    STORE(FP, 2, R12)
    CALL(R12, tstrcmp)
    LOAD(R2, 3, R12)
    DEC(SP, 5)
    SET(R1, 0)
    CMP(R2, R1)
    BG(if_true2)
    SET(R2, 0)
    BR(end_if5)
  LABEL(if_true2)
    SET(R2, 1)
  LABEL(end_if5)
    CMP(R2, R0)
    BZ(end_if4)
    LOAD(R1, 3, FP)
    STORE(R1, 10, FP)
    LOAD(R1, 8, FP)
    STORE(R1, 11, FP)
    SET(R1, 1)
    STORE(R1, 12, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R1, 10, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 11, FP)
    STORE(R1, 4, R12)
    LOAD(R1, 12, FP)
    STORE(R1, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R2, 3, R12)
    DEC(SP, 6)
    STORE(R2, 6, FP)
    LOAD(R2, 8, FP)
    STORE(R2, 7, FP)
  LABEL(end_if4)
    LOAD(R1, 8, FP)
    INC(R1, 1)
    STORE(R1, 8, FP)
    BR(for_start0)
  LABEL(for_end0)
    LOAD(R2, 7, FP)
    STORE(R2, 3, FP)
    LOAD(R1, 4, FP)
    LOAD(R2, 5, FP)
    LOAD(R13, 0, FP)
    LOAD(R12, 1, FP)
    DEC(SP, 9)
    RETURN(R12, R13)
LABEL(swap0)
    INC(SP, 18)
    STORE(R13, 0, FP)
    STORE(R12, 1, FP)
    STORE(R1, 6, FP)
    STORE(R2, 7, FP)
    LOAD(R2, 4, FP)
    LOAD(R1, 5, FP)
    CMP(R2, R1)
    BNZ(if_false1)
    LOAD(R2, 3, FP)
    BR(end_if6)
  LABEL(if_false1)
    LOAD(R2, 4, FP)
    LOAD(R1, 5, FP)
    CMP(R2, R1)
    BGE(if_false2)
    LOAD(R2, 4, FP)
    BR(end_if7)
  LABEL(if_false2)
    LOAD(R2, 5, FP)
  LABEL(end_if7)
    STORE(R2, 8, FP)
    LOAD(R2, 4, FP)
    LOAD(R1, 5, FP)
    CMP(R2, R1)
    BGE(if_false3)
    LOAD(R2, 5, FP)
    BR(end_if8)
  LABEL(if_false3)
    LOAD(R2, 4, FP)
  LABEL(end_if8)
    STORE(R2, 9, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 16, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 16, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, size)
    LOAD(R1, 3, R12)
    DEC(SP, 4)
    STORE(R1, 10, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 16, FP)
    SET(R1, 0)
    STORE(R1, 17, FP)
    LOAD(R1, 8, FP)
    STORE(R1, 18, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R1, 16, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 17, FP)
    STORE(R1, 4, R12)
    LOAD(R1, 18, FP)
    STORE(R1, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R1, 3, R12)
    DEC(SP, 6)
    STORE(R1, 11, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 16, FP)
    LOAD(R1, 8, FP)
    STORE(R1, 17, FP)
    SET(R1, 1)
    STORE(R1, 18, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R1, 16, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 17, FP)
    STORE(R1, 4, R12)
    LOAD(R1, 18, FP)
    STORE(R1, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R1, 3, R12)
    DEC(SP, 6)
    STORE(R1, 12, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 16, FP)
    LOAD(R2, 8, FP)
    SET(R1, 1)
    ADD(R2, R2, R1)
    STORE(R2, 17, FP)
    LOAD(R2, 9, FP)
    LOAD(R1, 8, FP)
    SUB(R2, R2, R1)
    SET(R1, 1)
    SUB(R2, R2, R1)
    STORE(R2, 18, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R2, 16, FP)
    STORE(R2, 3, R12)
    LOAD(R2, 17, FP)
    STORE(R2, 4, R12)
    LOAD(R2, 18, FP)
    STORE(R2, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R2, 3, R12)
    DEC(SP, 6)
    STORE(R2, 13, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 16, FP)
    LOAD(R1, 9, FP)
    STORE(R1, 17, FP)
    SET(R1, 1)
    STORE(R1, 18, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R1, 16, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 17, FP)
    STORE(R1, 4, R12)
    LOAD(R1, 18, FP)
    STORE(R1, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R1, 3, R12)
    DEC(SP, 6)
    STORE(R1, 14, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 16, FP)
    LOAD(R2, 9, FP)
    SET(R1, 1)
    ADD(R2, R2, R1)
    STORE(R2, 17, FP)
    LOAD(R2, 10, FP)
    LOAD(R1, 9, FP)
    SUB(R2, R2, R1)
    SET(R1, 1)
    SUB(R2, R2, R1)
    STORE(R2, 18, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R2, 16, FP)
    STORE(R2, 3, R12)
    LOAD(R2, 17, FP)
    STORE(R2, 4, R12)
    LOAD(R2, 18, FP)
    STORE(R2, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R2, 3, R12)
    DEC(SP, 6)
    STORE(R2, 15, FP)
    LOAD(R1, 11, FP)
    STORE(R1, 16, FP)
    LOAD(R1, 14, FP)
    STORE(R1, 18, FP)
    LOAD(R1, 13, FP)
    STORE(R1, 20, FP)
    LOAD(R1, 12, FP)
    STORE(R1, 22, FP)
    LOAD(R1, 15, FP)
    STORE(R1, 23, FP)
    MOVE(R12, SP)
    INC(SP, 5)
    LOAD(R1, 22, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 23, FP)
    STORE(R1, 4, R12)
    STORE(FP, 2, R12)
    CALL(R12, concat)
    LOAD(R1, 3, R12)
    DEC(SP, 5)
    STORE(R1, 21, FP)
    MOVE(R12, SP)
    INC(SP, 5)
    LOAD(R1, 20, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 21, FP)
    STORE(R1, 4, R12)
    STORE(FP, 2, R12)
    CALL(R12, concat)
    LOAD(R1, 3, R12)
    DEC(SP, 5)
    STORE(R1, 19, FP)
    MOVE(R12, SP)
    INC(SP, 5)
    LOAD(R1, 18, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 19, FP)
    STORE(R1, 4, R12)
    STORE(FP, 2, R12)
    CALL(R12, concat)
    LOAD(R1, 3, R12)
    DEC(SP, 5)
    STORE(R1, 17, FP)
    MOVE(R12, SP)
    INC(SP, 5)
    LOAD(R1, 16, FP)
    STORE(R1, 3, R12)
    LOAD(R1, 17, FP)
    STORE(R1, 4, R12)
    STORE(FP, 2, R12)
    CALL(R12, concat)
    LOAD(R2, 3, R12)
    DEC(SP, 5)
  LABEL(end_if6)
    STORE(R2, 3, FP)
    LOAD(R1, 6, FP)
    LOAD(R2, 7, FP)
    LOAD(R13, 0, FP)
    LOAD(R12, 1, FP)
    DEC(SP, 18)
    RETURN(R12, R13)
LABEL(ssort0)
    INC(SP, 13)
    STORE(R13, 0, FP)
    STORE(R12, 1, FP)
    STORE(R1, 4, FP)
    STORE(R2, 5, FP)
    STORE(R3, 6, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 7, FP)
    SET(R1, 0)
    STORE(R1, 8, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 10, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 10, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, size)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    SET(R1, 1)
    SUB(R2, R2, R1)
    STORE(R2, 9, FP)
  LABEL(for_start1)
    LOAD(R1, 8, FP)
    LOAD(R2, 9, FP)
    CMP(R1, R2)
    BG(for_end1)
    LOAD(R1, 7, FP)
    STORE(R1, 12, FP)
    LOAD(R1, 8, FP)
    STORE(R1, 13, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 15, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 15, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, size)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    LOAD(R1, 8, FP)
    SUB(R2, R2, R1)
    STORE(R2, 14, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R2, 12, FP)
    STORE(R2, 3, R12)
    LOAD(R2, 13, FP)
    STORE(R2, 4, R12)
    LOAD(R2, 14, FP)
    STORE(R2, 5, R12)
    STORE(FP, 2, R12)
    CALL(R12, substring)
    LOAD(R2, 3, R12)
    DEC(SP, 6)
    STORE(R2, 11, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R2, 11, FP)
    STORE(R2, 3, R12)
    LOAD(Rt, 2, FP)
    STORE(Rt, 2, R12)
    CALL(R12, first_letter0)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    STORE(R2, 10, FP)
    LOAD(R1, 7, FP)
    STORE(R1, 11, FP)
    LOAD(R1, 8, FP)
    STORE(R1, 12, FP)
    LOAD(R2, 8, FP)
    LOAD(R1, 10, FP)
    ADD(R2, R2, R1)
    STORE(R2, 13, FP)
    MOVE(R12, SP)
    INC(SP, 6)
    LOAD(R2, 11, FP)
    STORE(R2, 3, R12)
    LOAD(R2, 12, FP)
    STORE(R2, 4, R12)
    LOAD(R2, 13, FP)
    STORE(R2, 5, R12)
    LOAD(Rt, 2, FP)
    STORE(Rt, 2, R12)
    CALL(R12, swap0)
    LOAD(R3, 3, R12)
    DEC(SP, 6)
    STORE(R3, 7, FP)
    LOAD(R1, 8, FP)
    INC(R1, 1)
    STORE(R1, 8, FP)
    BR(for_start1)
  LABEL(for_end1)
    LOAD(R3, 7, FP)
    STORE(R3, 3, FP)
    LOAD(R1, 4, FP)
    LOAD(R2, 5, FP)
    LOAD(R3, 6, FP)
    LOAD(R13, 0, FP)
    LOAD(R12, 1, FP)
    DEC(SP, 13)
    RETURN(R12, R13)
