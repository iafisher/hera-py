#include <Tiger-stdlib-stack-data.hera>

CBON()
    INC(SP, 6)
    SET(R4, 2)
    MOVE(R12, SP)
    INC(SP, 4)
    STORE(R4, 3, R12)
    CALL(R12, malloc)
    LOAD(R4, 3, R12)
    DEC(SP, 4)
    SET(R1, 4)
    STORE(R1, 0, R4)
    SET(R1, 0)
    STORE(R1, 3, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(Rt, 3, FP)
    INC(Rt, 1)
    STORE(Rt, 3, R12)
    CALL(R12, malloc)
    LOAD(R3, 3, R12)
    DEC(SP, 4)
    LOAD(Rt, 3, FP)
    STORE(Rt, 0, R3)
    SET(Rt, 0)
    STORE(Rt, 4, FP)
  LABEL(array0)
    LOAD(Rt, 4, FP)
    LOAD(R2, 3, FP)
    CMP(Rt, R2)
    BZ(array_end0)
    SET(R1, 0)
    LOAD(Rt, 4, FP)
    INC(Rt, 1)
    STORE(Rt, 4, FP)
    ADD(Rt, Rt, R3)
    STORE(R1, 0, Rt)
    BR(array0)
  LABEL(array_end0)
    STORE(R3, 1, R4)
    STORE(R4, 0, FP)
    SET(R4, 2)
    MOVE(R12, SP)
    INC(SP, 4)
    STORE(R4, 3, R12)
    CALL(R12, malloc)
    LOAD(R4, 3, R12)
    DEC(SP, 4)
    SET(R1, 17)
    STORE(R1, 0, R4)
    SET(R1, 1)
    STORE(R1, 3, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(Rt, 3, FP)
    INC(Rt, 1)
    STORE(Rt, 3, R12)
    CALL(R12, malloc)
    LOAD(R3, 3, R12)
    DEC(SP, 4)
    LOAD(Rt, 3, FP)
    STORE(Rt, 0, R3)
    SET(Rt, 0)
    STORE(Rt, 4, FP)
  LABEL(array1)
    LOAD(Rt, 4, FP)
    LOAD(R2, 3, FP)
    CMP(Rt, R2)
    BZ(array_end1)
    LOAD(R1, 0, FP)
    LOAD(Rt, 4, FP)
    INC(Rt, 1)
    STORE(Rt, 4, FP)
    ADD(Rt, Rt, R3)
    STORE(R1, 0, Rt)
    BR(array1)
  LABEL(array_end1)
    STORE(R3, 1, R4)
    STORE(R4, 1, FP)
    SET(R4, 2)
    MOVE(R12, SP)
    INC(SP, 4)
    STORE(R4, 3, R12)
    CALL(R12, malloc)
    LOAD(R4, 3, R12)
    DEC(SP, 4)
    SET(R1, 0)
    STORE(R1, 0, R4)
    SET(R1, 2)
    STORE(R1, 3, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(Rt, 3, FP)
    INC(Rt, 1)
    STORE(Rt, 3, R12)
    CALL(R12, malloc)
    LOAD(R3, 3, R12)
    DEC(SP, 4)
    LOAD(Rt, 3, FP)
    STORE(Rt, 0, R3)
    SET(Rt, 0)
    STORE(Rt, 4, FP)
  LABEL(array2)
    LOAD(Rt, 4, FP)
    LOAD(R2, 3, FP)
    CMP(Rt, R2)
    BZ(array_end2)
    LOAD(R1, 1, FP)
    LOAD(Rt, 4, FP)
    INC(Rt, 1)
    STORE(Rt, 4, FP)
    ADD(Rt, Rt, R3)
    STORE(R1, 0, Rt)
    BR(array2)
  LABEL(array_end2)
    STORE(R3, 1, R4)
    STORE(R4, 2, FP)
    LOAD(R1, 2, FP)
    STORE(R1, 4, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 4, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, sum_tree0)
    LOAD(R1, 3, R12)
    DEC(SP, 4)
    STORE(R1, 3, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 3, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, printint)
    LOAD(R4, 3, R12)
    DEC(SP, 4)
HALT()

#include <Tiger-stdlib-stack.hera>
LABEL(array_out_of_bounds0)
    print("attempted illegal array access... halting")
    HALT()
LABEL(nil_record0)
    print("attempted use of a nil record... halting")
    HALT()

LABEL(sum_tree0)
    INC(SP, 4)
    STORE(R13, 0, FP)
    STORE(R12, 1, FP)
    STORE(R1, 4, FP)
    STORE(R2, 5, FP)
    STORE(R3, 6, FP)
    LOAD(R2, 3, FP)
    SET(R1, 0)
    CMP(R2, R1)
    BNZ(if_false0)
    SET(R3, 0)
    BR(end_if0)
  LABEL(if_false0)
    LOAD(R1, 3, FP)
    CMP(R1, R0)
    BZ(nil_record0)
    LOAD(R3, 0, R1)
    LOAD(R1, 3, FP)
    CMP(R1, R0)
    BZ(nil_record0)
    LOAD(R2, 1, R1)
    STORE(R2, 7, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R2, 7, FP)
    STORE(R2, 3, R12)
    LOAD(Rt, 2, FP)
    STORE(Rt, 2, R12)
    CALL(R12, sum_tree_list0)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    ADD(R3, R3, R2)
  LABEL(end_if0)
    STORE(R3, 3, FP)
    LOAD(R1, 4, FP)
    LOAD(R2, 5, FP)
    LOAD(R3, 6, FP)
    LOAD(R13, 0, FP)
    LOAD(R12, 1, FP)
    DEC(SP, 4)
    RETURN(R12, R13)
LABEL(sum_tree_list0)
    INC(SP, 7)
    STORE(R13, 0, FP)
    STORE(R12, 1, FP)
    STORE(R1, 4, FP)
    STORE(R2, 5, FP)
    STORE(R3, 6, FP)
    SET(R1, 0)
    STORE(R1, 7, FP)
    SET(R1, 0)
    STORE(R1, 8, FP)
    LOAD(R1, 3, FP)
    STORE(R1, 10, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R1, 10, FP)
    STORE(R1, 3, R12)
    STORE(FP, 2, R12)
    CALL(R12, size)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    SET(R1, 1)
    SUB(R2, R2, R1)
    STORE(R2, 9, FP)
  LABEL(for_start0)
    LOAD(R1, 8, FP)
    LOAD(R2, 9, FP)
    CMP(R1, R2)
    BG(for_end0)
    LOAD(R2, 8, FP)
    LOAD(R1, 3, FP)
    CMP(R2, R0)
    BL(array_out_of_bounds0)
    LOAD(Rt, 0, R1)
    CMP(R2, Rt)
    BGE(array_out_of_bounds0)
    ADD(R1, R1, R2)
    LOAD(R2, 1, R1)
    STORE(R2, 10, FP)
    MOVE(R12, SP)
    INC(SP, 4)
    LOAD(R2, 10, FP)
    STORE(R2, 3, R12)
    LOAD(Rt, 2, FP)
    STORE(Rt, 2, R12)
    CALL(R12, sum_tree0)
    LOAD(R2, 3, R12)
    DEC(SP, 4)
    LOAD(R1, 7, FP)
    ADD(R3, R1, R2)
    STORE(R3, 7, FP)
    LOAD(R1, 8, FP)
    INC(R1, 1)
    STORE(R1, 8, FP)
    BR(for_start0)
  LABEL(for_end0)
    LOAD(R3, 7, FP)
    STORE(R3, 3, FP)
    LOAD(R1, 4, FP)
    LOAD(R2, 5, FP)
    LOAD(R3, 6, FP)
    LOAD(R13, 0, FP)
    LOAD(R12, 1, FP)
    DEC(SP, 7)
    RETURN(R12, R13)
